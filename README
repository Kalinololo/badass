Router P2 explain :
     1️⃣ Assignation d’une adresse IP à eth0
    ip addr add 10.1.1.1/24 dev eth0
    ✅ Pourquoi ?
    On assigne l’adresse IP 10.1.1.1 avec un masque /24 (soit 255.255.255.0) à l’interface eth0.
    Cela permet à la machine de communiquer avec d'autres machines dans le même sous-réseau (10.1.1.0/24).

    2️⃣ Création de l’interface VXLAN
    ip link add name vxlan10 type vxlan id 10 dev eth0 local 10.1.1.1 remote 10.1.1.2 dstport 4789
    ✅ Pourquoi ?
    On crée une interface virtuelle de type VXLAN, qui encapsule du trafic Ethernet dans des paquets UDP pour transporter du trafic Layer 2 (L2) sur un réseau Layer 3 (L3).

    📌 Explication des paramètres :

    name vxlan10 → Nom de l’interface VXLAN.
    type vxlan → Indique qu’il s’agit d’un tunnel VXLAN.
    id 10 → Identifiant du VXLAN (VNI = VXLAN Network Identifier), utilisé pour isoler plusieurs VXLANs.
    dev eth0 → Interface physique qui transporte le VXLAN.
    local 10.1.1.1 → Adresse IP locale du routeur qui envoie les paquets VXLAN.
    remote 10.1.1.2 → Adresse IP de l’autre extrémité du tunnel VXLAN (le second routeur par exemple).
    dstport 4789 → Port UDP utilisé pour le VXLAN (standard IANA).
    En gros, on crée un tunnel entre 10.1.1.1 et 10.1.1.2 qui va transporter du trafic de niveau 2.

    3️⃣ Activation de l’interface VXLAN
    ip link set dev vxlan10 up
    ✅ Pourquoi ?
    L’interface VXLAN est créée mais désactivée par défaut. Cette commande l’active.

    4️⃣ Création d’un bridge (br0)
    ip link add br0 type bridge
    ✅ Pourquoi ?
    On crée un switch virtuel (br0), qui va permettre d’interconnecter des interfaces comme vxlan10 et eth1.
    Un bridge fonctionne comme un switch de niveau 2 : il apprend les adresses MAC et transfère les paquets en fonction de la table MAC.

    5️⃣ Activation du bridge
    ip link set dev br0 up
    ✅ Pourquoi ?
    Comme pour vxlan10, on active br0, sinon il ne fonctionnera pas.

    6️⃣ Ajout des interfaces au bridge
    brctl addif br0 eth1
    brctl addif br0 vxlan10
    ✅ Pourquoi ?
    On connecte eth1 et vxlan10 au bridge br0, ce qui signifie :

    Tout le trafic venant de eth1 sera transféré via br0.
    Tout le trafic venant de vxlan10 passera aussi par br0.
    🔗 Ce que ça fait concrètement :

    eth1 est probablement une interface connectée à un réseau local.
    vxlan10 est un tunnel vers un autre routeur.
    Le bridge br0 permet d'interconnecter eth1 et vxlan10 comme s'ils étaient dans le même switch.
    Cela permet de faire transiter du trafic de niveau 2 (MAC) entre des machines distantes via VXLAN.
    📌 Résumé global
    Cette configuration :

    Assigne une IP à eth0 pour permettre la communication.
    Crée un tunnel VXLAN entre 10.1.1.1 et 10.1.1.2 pour transporter du trafic Ethernet encapsulé en UDP.
    Active le VXLAN et crée un bridge (br0).
    Ajoute eth1 et vxlan10 au bridge pour qu’ils puissent échanger du trafic L2.
    ➡️ Ça permet d’étendre un réseau Ethernet à travers un tunnel VXLAN au-dessus d’un réseau IP classique.

    💡 En gros, c'est comme si tu avais un long câble Ethernet virtuel entre tes deux routeurs, même s'ils sont situés sur des réseaux IP différents. 🚀

Router P3 explain : 
     🔹 1. Entrer en mode de configuration
     vtysh < router_lmataris-1_config
     💡 Pourquoi ?
     → Charge le fichier router_lmataris-1_config directement dans vtysh, l'interface CLI de FRRouting (FRR).
     → Applique la configuration au routeur.

     configure terminal
     💡 Pourquoi ?
     → Passe en mode configuration pour modifier les paramètres du routeur.

     🔹 2. Désactiver le routage IPv6
     no ipv6 forwarding
     💡 Pourquoi ?
     → On désactive IPv6 car ce réseau est basé uniquement sur IPv4.
     → Cela empêche le routeur de transférer des paquets IPv6.

     🔹 3. Configuration des interfaces réseau
     🔸 Interface eth0

     interface eth0
     ip address 10.1.1.1/30
     exit
     💡 Pourquoi ?
     → Assigne 10.1.1.1/30 à l’interface eth0 pour une liaison point-à-point.
     → Un /30 permet uniquement deux hôtes (ex: 10.1.1.1 et 10.1.1.2), idéal pour des connexions directes entre routeurs.

     🔸 Interface eth1

     interface eth1
     ip address 10.1.1.5/30
     exit
     💡 Pourquoi ?
     → eth1 est un autre lien point-à-point, avec l’IP 10.1.1.5/30.

     🔸 Interface eth2

     interface eth2
     ip address 10.1.1.9/30
     exit
     💡 Pourquoi ?
     → eth2 est configurée avec 10.1.1.9/30, connectée à un autre routeur.

     🔸 Interface Loopback (lo)

     interface lo
     ip address 1.1.1.1/32
     exit
     💡 Pourquoi ?
     → 1.1.1.1/32 est une IP unique utilisée pour identifier ce routeur en BGP.
     → Permet aux sessions BGP de rester actives même si une interface physique tombe.

     🔹 4. Configuration de BGP (Border Gateway Protocol)

     router bgp 1
     💡 Pourquoi ?
     → Démarre le processus BGP avec l'AS (Autonomous System) 1.
     → Tous les routeurs partageant cet AS forment une fédération iBGP.

     🔸 Création d’un groupe de voisins dynamique

     neighbor DYNAMIC peer-group
     💡 Pourquoi ?
     → Crée un groupe de voisins BGP dynamique pour éviter d’ajouter chaque voisin manuellement.


     neighbor DYNAMIC remote-as 1
     💡 Pourquoi ?
     → Tous les voisins du groupe DYNAMIC font partie du même AS (1), donc relation iBGP.

 
     neighbor DYNAMIC update-source lo
     💡 Pourquoi ?
     → Les sessions BGP utiliseront l’interface loopback (1.1.1.1) comme source.
     → Cela assure la stabilité des sessions, même si une interface physique tombe.

     🔸 Écoute dynamique des voisins

     bgp listen range 1.1.1.0/24 peer-group DYNAMIC
     💡 Pourquoi ?
     → Tous les routeurs ayant une IP dans 1.1.1.0/24 sont automatiquement ajoutés au groupe DYNAMIC.
     → Pas besoin de configurer manuellement chaque voisin.

     🔹 5. Activation d’EVPN (Ethernet VPN)

     address-family l2vpn evpn
     💡 Pourquoi ?
     → Active EVPN, un protocole qui permet de transporter des MAC adresses via BGP (utile pour VXLAN).

     neighbor DYNAMIC activate
     💡 Pourquoi ?
     → Active EVPN pour les voisins du groupe DYNAMIC.

     neighbor DYNAMIC route-reflector-client
     💡 Pourquoi ?
     → Configure ce routeur comme Route Reflector (RR).
     → Un RR évite d’avoir une topologie full-mesh en iBGP, ce qui simplifie la gestion du réseau.

     exit-address-family
     exit
     💡 Pourquoi ?
     → Termine la configuration BGP.

     🔹 6. Configuration de OSPF (Open Shortest Path First)
     bash
     Copier
     Modifier
     router ospf
     💡 Pourquoi ?
     → Active le protocole de routage OSPF.
     → OSPF est utilisé pour transporter les routes sous-jacentes afin que BGP puisse fonctionner correctement.

     bash
     Copier
     Modifier
     network 0.0.0.0/0 area 0
     💡 Pourquoi ?
     → Cette ligne annonce toutes les interfaces (0.0.0.0/0) dans l’aire 0 (backbone OSPF).
     → Permet une connectivité interne entre les routeurs avant que BGP ne prenne le relais.

     bash
     Copier
     Modifier
     exit
     💡 Pourquoi ?
     → Quitte la configuration OSPF.

     📌 Résumé visuel de la configuration
     Section	Explication
     Mode config	Entre dans le mode de configuration.
     IPv6 OFF	On désactive IPv6 car on utilise uniquement IPv4.
     Interfaces	On attribue des adresses IP aux interfaces Ethernet et Loopback.
     BGP	On configure le routeur en BGP AS 1, avec des voisins dynamiques et un Route Reflector.
     EVPN	On active EVPN pour échanger des MAC adresses avec BGP.
     OSPF	OSPF assure la connectivité entre les routeurs avant que BGP ne soit opérationnel.
     🚀 Pourquoi cette configuration est importante ?
     ✅ iBGP avec Route Reflector → Réduit le besoin d’une topologie full-mesh.
     ✅ EVPN via BGP → Permet d’échanger des adresses MAC et de gérer le VXLAN.
     ✅ OSPF pour la connectivité → Facilite l’échange des routes internes avant BGP.
     ✅ Écoute dynamique BGP → Simplifie la gestion des voisins BGP.







